{"version":3,"sources":["Components/CircleFifths/Piano.module.css","Components/CircleFifths/Index.module.css","Components/CircleFifths/Title.module.css","Components/CircleFifths/Piano.js","Components/CircleFifths/Title.js","Components/CircleFifths/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isNoteInChord","note","chord","indexOf","styles","active","Piano","props","className","root","white","selectChord","black","Title","synth","Tone","toDestination","StartAudioContext","MAJOR_SCALE","MINOR_SCALE","chordsMajor","chordsMinor","Index","state","listElMajor","i","push","onClick","getChord","triggerAttackRelease","triggerChord","length","listElMinor","bind","amount","scale","normalizeMap","replace","match","forEach","el","transposeChord","this","setState","circle","major","minor","Component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cdcf37b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Piano_root__3DlbQ\",\"black\":\"Piano_black__3_gxX\",\"active\":\"Piano_active__2IimA\",\"white\":\"Piano_white__1hF4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Index_root__3eMjj\",\"circle\":\"Index_circle__1eVrl\",\"major\":\"Index_major__3xNuB\",\"minor\":\"Index_minor__bYKCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Title_root__2J8xl\"};","import React from 'react';\nimport styles from \"./Piano.module.css\";\n\n// todo разнести\nconst Piano = props => (\n    <div className={styles.root}>\n        <div className={styles.white + ' ' + isNoteInChord('C4', props.selectChord)}></div>\n        <div className={styles.black + ' ' + isNoteInChord('C#4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('D4', props.selectChord)}></div>\n        <div className={styles.black + ' ' + isNoteInChord('D#4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('E4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('F4', props.selectChord)}></div>\n        <div className={styles.black + ' ' + isNoteInChord('F#4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('G4', props.selectChord)}></div>\n        <div className={styles.black + ' ' + isNoteInChord('G#4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('A4', props.selectChord)}></div>\n        <div className={styles.black + ' ' + isNoteInChord('A#4', props.selectChord)}></div>\n        <div className={styles.white + ' ' + isNoteInChord('B4', props.selectChord)}></div>\n    </div>\n);\n\nfunction isNoteInChord(note, chord) {\n\n    if (!chord) {\n        return '';\n    }\n    return chord.indexOf(note) !== -1 ? styles.active : '';\n}\n\nexport default Piano;\n","import React from 'react';\nimport styles from \"./Title.module.css\";\n\n\nconst Title = props => (\n    <div className={styles.root}>\n        Кварто-квинтовый круг\n    </div>\n);\n\nexport default Title;\n","import React, {Component, useState} from 'react';\nimport styles from \"./Index.module.css\";\nimport * as Tone from 'tone';\nimport Piano from \"./Piano\";\nimport Title from \"./Title\";\nimport StartAudioContext from \"startaudiocontext\";\n\nconst synth = new Tone.PolySynth().toDestination();\nStartAudioContext(Tone.context);\nconst MAJOR_SCALE = [-12, 0, 4, 7];\nconst MINOR_SCALE = [-12, 0, 3, 7];\n\n\nconst chordsMajor = ['C4','G4','D4','A4','E4','B4','Gb4','Db4','Ab4','Eb4','Bb4','F4'];\nconst chordsMinor = ['A4', 'E4', 'B4','F#4','C#4','G#4','Eb4','Bb4','F4','C4','G4','D4'];\n\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectChord: false,\n        };\n\n        this.listElMajor = [];\n        for (let i=0; i<chordsMajor.length; i++) {\n            this.listElMajor.push(<div onClick={() => {\n                const chord = this.getChord(chordsMajor[i], MAJOR_SCALE);\n                synth.triggerAttackRelease(chord, 0.2)\n                this.triggerChord(chord);\n            }}></div>);\n        }\n\n        this.listElMinor= [];\n        for (let i=0; i<chordsMinor.length; i++) {\n            this.listElMinor.push(<div onClick={() => {\n                const chord = this.getChord(chordsMinor[i], MINOR_SCALE);\n                synth.triggerAttackRelease(chord, 0.2)\n                this.triggerChord(chord);\n            }}></div>);\n        }\n\n        this.triggerChord = this.triggerChord.bind(this);\n    }\n\n    transposeChord(chord, amount) {\n        const scale = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n        const normalizeMap = {\"Cb\":\"B\", \"Db\":\"C#\", \"Eb\":\"D#\", \"Fb\":\"E\", \"Gb\":\"F#\", \"Ab\":\"G#\", \"Bb\":\"A#\",  \"E#\":\"F\", \"B#\":\"C\"};\n        return chord.replace(/[CDEFGAB](b|#)?/g, function(match) {\n            const i = (scale.indexOf((normalizeMap[match] ? normalizeMap[match] : match)) + amount) % scale.length;\n            return scale[ i < 0 ? i + scale.length : i ];\n        })\n    }\n\n    getChord(note, scale) {\n        let chord = [];\n        scale.forEach(el => {chord.push(this.transposeChord(note, el))});\n        return chord;\n    }\n\n    triggerChord(chord) {\n        this.setState(({selectChord}) => ({selectChord: chord}));\n    }\n\n    render() {\n        return (\n            <>\n                <Title/>\n                <div className={styles.root}>\n                    <div className={styles.circle+ ' ' +  styles.major} >\n                        {this.listElMajor}\n                    </div>\n                    <div className={styles.circle+ ' ' +  styles.minor}>\n                        {this.listElMinor}\n                    </div>\n                </div>\n                <Piano selectChord={this.state.selectChord}/>\n            </>\n        );\n    }\n}\n\nexport default Index;\n","import React from 'react';\nimport CircleFifths from './Components/CircleFifths/Index';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <CircleFifths/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}